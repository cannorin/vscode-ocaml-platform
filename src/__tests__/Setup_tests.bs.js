// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Json = require("@glennsl/bs-json/src/Json.bs.js");
var CheckBucklescriptCompat = require("../CheckBucklescriptCompat.bs.js");

Jest.describe("Setup.Bsb.checkBucklescriptCompat", (function (param) {
        Jest.test("must return Ok() for a valid package.json with compatible bs-platform", (function (param) {
                var match = CheckBucklescriptCompat.run(Json.parseOrRaise(" { \"dependencies\": { \"bs-platform\": \"7.x.x\" } } "));
                if (match.tag) {
                  return Jest.fail(CheckBucklescriptCompat.E.toString(match[0]));
                } else {
                  return Jest.pass;
                }
              }));
        Jest.test("must return Error(\"Bucklescript <6 not supported\") for a valid package.json with incompatible bs-platform", (function (param) {
                var match = CheckBucklescriptCompat.run(Json.parseOrRaise(" { \"dependencies\": { \"bs-platform\": \"5.x.x\" } } "));
                if (match.tag) {
                  return Jest.Expect.toBe(/* IncompatibleBucklescript */1, Jest.Expect.expect(match[0]));
                } else {
                  return Jest.fail("should not have returned Ok");
                }
              }));
        return Jest.test("must return Error() for a package.json with no bs-platform", (function (param) {
                      var match = CheckBucklescriptCompat.run(Json.parseOrRaise(" { \"dependencies\": { \"react\": \"*\" } } "));
                      if (match.tag) {
                        return Jest.Expect.toBe(/* NoBsPlatform */0, Jest.Expect.expect(match[0]));
                      } else {
                        return Jest.fail("should not have returned Ok()");
                      }
                    }));
      }));

/*  Not a pure module */
